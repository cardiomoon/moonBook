
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "webr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('webr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("PieDonut")
> ### * PieDonut
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: PieDonut
> ### Title: Draw a PieDonut plot
> ### Aliases: PieDonut
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> require(ggplot2)
Loading required package: ggplot2
> browser=c("MSIE","Firefox","Chrome","Safari","Opera")
> share=c(50,21.9,10.8,6.5,1.8)
> df=data.frame(browser,share)
> PieDonut(df,aes(browser,count=share),r0=0.7,start=3*pi/2,labelpositionThreshold=0.1)
> 
> 
> 
> cleanEx()

detaching â€˜package:ggplot2â€™, â€˜package:moonBookâ€™

> nameEx("cox.stuart.test")
> ### * cox.stuart.test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cox.stuart.test
> ### Title: Cox-Stuart test for trend analysis The Cox-Stuart test is
> ###   defined as a little powerful test (power equal to 0.78), but very
> ###   robust for the trend analysis. It is therefore applicable to a wide
> ###   variety of situations, to get an idea of the evolution of values
> ###   obtained. The proposed method is based on the binomial distribution.
> ###   This function was written by Tommaso Martino<todoslogos@gmail.com>
> ###   (See 'References')
> ### Aliases: cox.stuart.test
> 
> ### ** Examples
> 
> customers = c(5, 9, 12, 18, 17, 16, 19, 20, 4, 3, 18, 16, 17, 15, 14)
> cox.stuart.test(customers)

	Cox-Stuart test for trend analysis

data:  
Decreasing trend, p-value = 0.10938

> 
> 
> 
> cleanEx()
> nameEx("freqSummary")
> ### * freqSummary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: freqSummary
> ### Title: Make table summarizing frequency
> ### Aliases: freqSummary
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> freqSummary(acs$Dx)
                Count Percent Valid Percent Cum Percent
NSTEMI          "153" "17.9"  "17.9"        "17.9"     
STEMI           "304" "35.5"  "35.5"        "53.3"     
Unstable Angina "400" "46.7"  "46.7"        "100.0"    
Sum             "857" "100.0" "100.0"       ""         
> #freqSummary(acs$smoking,lang="kor")
> 
> 
> 
> cleanEx()

detaching â€˜package:moonBookâ€™

> nameEx("freqTable")
> ### * freqTable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: freqTable
> ### Title: Make flextable summarizing frequency
> ### Aliases: freqTable
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> freqTable(acs$Dx)
a flextable object.
col_keys: `rowname`, `Count`, `Percent`, `Valid Percent`, `Cum Percent` 
header has 1 row(s) 
body has 4 row(s) 
original dataset sample: 
                        rowname Count Percent Valid Percent Cum Percent
NSTEMI                   NSTEMI   153    17.9          17.9        17.9
STEMI                     STEMI   304    35.5          35.5        53.3
Unstable Angina Unstable Angina   400    46.7          46.7       100.0
Sum                         Sum   857   100.0         100.0            
> #freqTable(acs$smoking,lang="kor",vanilla=TRUE,fontsize=12)
> 
> 
> 
> cleanEx()

detaching â€˜package:moonBookâ€™

> nameEx("numSummary")
> ### * numSummary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: numSummary
> ### Title: Numerical Summary
> ### Aliases: numSummary numSummary1 numSummary2
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> require(magrittr)
Loading required package: magrittr
> require(dplyr)
Loading required package: dplyr

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> require(rrtable)
Loading required package: rrtable
Welcome to rrtable package
Register inputHandler for chooserInput
> require(webr)
> require(tibble)
Loading required package: tibble
> numSummary(acs)
[90m# A tibble: 9 x 13[39m
  vars      n  mean    sd median trimmed   mad   min   max range   skew kurtosis
  [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m age     857  63.3 11.7    64      63.6 13.3   28    91    63   -[31m0[39m[31m.[39m[31m175[39m  -[31m0[39m[31m.[39m[31m566[39m 
[90m2[39m EF      723  55.8  9.62   58.1    56.8  7.86  18    79    61   -[31m0[39m[31m.[39m[31m978[39m   1.11  
[90m3[39m heigâ€¦   764 163.   9.08  165     164.   7.41 130   185    55   -[31m0[39m[31m.[39m[31m440[39m  -[31m0[39m[31m.[39m[31m0[39m[31m14[4m5[24m[39m
[90m4[39m weigâ€¦   766  64.8 11.4    65      64.5 10.4   30   112    82    0.336   0.444 
[90m5[39m BMI     764  24.3  3.35   24.2    24.2  3.01  15.6  41.4  25.8  0.668   2.12  
[90m6[39m TC      834 185.  47.8   183     184.  43.0   25   493   468    0.737   3.77  
[90m7[39m LDLC    833 117.  41.1   114     115.  40.0   15   366   351    0.787   2.33  
[90m8[39m HDLC    834  38.2 11.1    38      38.0 10.4    4    89    85    0.366   1.46  
[90m9[39m TG      842 125.  90.9   106.    111.  60.0   11   877   866    3.02   14.9   
[90m# â€¦ with 1 more variable: se [3m[90m<dbl>[90m[23m[39m
> numSummary(acs$age)
[90m# A tibble: 1 x 12[39m
      n  mean    sd median trimmed   mad   min   max range   skew kurtosis    se
  [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m1[39m   857  63.3  11.7     64    63.6  13.3    28    91    63 -[31m0[39m[31m.[39m[31m175[39m   -[31m0[39m[31m.[39m[31m566[39m 0.400
> numSummary(acs,age,EF)
[90m# A tibble: 2 x 13[39m
  vars      n  mean    sd median trimmed   mad   min   max range   skew kurtosis
  [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m age     857  63.3 11.7    64      63.6 13.3     28    91    63 -[31m0[39m[31m.[39m[31m175[39m   -[31m0[39m[31m.[39m[31m566[39m
[90m2[39m EF      723  55.8  9.62   58.1    56.8  7.86    18    79    61 -[31m0[39m[31m.[39m[31m978[39m    1.11 
[90m# â€¦ with 1 more variable: se [3m[90m<dbl>[90m[23m[39m
> acs %>% group_by(sex) %>% numSummary(age,BMI)
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
[90m# A tibble: 4 x 14[39m
[90m# Groups:   sex [2][39m
  sex   vars      n  mean    sd median trimmed   mad   min   max range    skew
  [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m1[39m Male  age     570  60.6 11.2    61      60.6 11.9   28    91    63   -[31m0[39m[31m.[39m[31m0[39m[31m14[4m8[24m[39m
[90m2[39m Male  BMI     509  24.3  3.24   24.2    24.2  2.98  16.3  41.4  25.1  0.616 
[90m3[39m Femaâ€¦ age     287  68.7 10.7    70      69.4 10.4   39    90    51   -[31m0[39m[31m.[39m[31m593[39m 
[90m4[39m Femaâ€¦ BMI     255  24.2  3.56   24.0    24.1  3.13  15.6  41.2  25.6  0.751 
[90m# â€¦ with 2 more variables: kurtosis [3m[90m<dbl>[90m[23m, se [3m[90m<dbl>[90m[23m[39m
> acs %>% group_by(sex) %>% select(age) %>% numSummary
Adding missing grouping variables: `sex`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
[90m# A tibble: 2 x 13[39m
[90m# Groups:   sex [2][39m
  sex       n  mean    sd median trimmed   mad   min   max range    skew
  [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m1[39m Male    570  60.6  11.2     61    60.6  11.9    28    91    63 -[31m0[39m[31m.[39m[31m0[39m[31m14[4m8[24m[39m
[90m2[39m Femaâ€¦   287  68.7  10.7     70    69.4  10.4    39    90    51 -[31m0[39m[31m.[39m[31m593[39m 
[90m# â€¦ with 2 more variables: kurtosis [3m[90m<dbl>[90m[23m, se [3m[90m<dbl>[90m[23m[39m
> acs %>% group_by(sex) %>% select(age,EF) %>% numSummary
Adding missing grouping variables: `sex`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
[90m# A tibble: 4 x 14[39m
[90m# Groups:   sex [2][39m
  sex   vars      n  mean    sd median trimmed   mad   min   max range    skew
  [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m
[90m1[39m Male  age     570  60.6 11.2    61      60.6 11.9   28      91  63   -[31m0[39m[31m.[39m[31m0[39m[31m14[4m8[24m[39m
[90m2[39m Male  EF      483  55.6  9.40   57.3    56.4  8.01  18      79  61   -[31m0[39m[31m.[39m[31m789[39m 
[90m3[39m Femaâ€¦ age     287  68.7 10.7    70      69.4 10.4   39      90  51   -[31m0[39m[31m.[39m[31m593[39m 
[90m4[39m Femaâ€¦ EF      240  56.3 10.1    59.2    57.6  7.19  18.4    75  56.6 -[31m1[39m[31m.[39m[31m30[39m  
[90m# â€¦ with 2 more variables: kurtosis [3m[90m<dbl>[90m[23m, se [3m[90m<dbl>[90m[23m[39m
> acs %>% group_by(sex,Dx) %>% select(age,EF) %>% numSummary
Adding missing grouping variables: `sex`, `Dx`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
[90m# A tibble: 12 x 15[39m
[90m# Groups:   sex, Dx [6][39m
   sex   Dx    vars      n  mean    sd median trimmed   mad   min   max range
   [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m
[90m 1[39m Male  STEMI age     220  59.4 11.7    59.5    59.4 11.1   30    86    56  
[90m 2[39m Male  STEMI EF      195  52.4  8.90   54      52.9  8.45  18    73.6  55.6
[90m 3[39m Femaâ€¦ STEMI age      84  69.1 10.4    70      70.0 10.4   42    89    47  
[90m 4[39m Femaâ€¦ STEMI EF       77  52.3 10.9    55.7    53.7  9.04  18.4  67.1  48.7
[90m 5[39m Male  NSTEâ€¦ age     103  61.1 11.6    59      61.3 13.3   28    85    57  
[90m 6[39m Male  NSTEâ€¦ EF       94  55.1  9.42   58      55.9  7.12  21.8  74    52.2
[90m 7[39m Femaâ€¦ Unstâ€¦ age     153  67.7 10.7    70      68.3  8.90  39    90    51  
[90m 8[39m Femaâ€¦ Unstâ€¦ EF      118  59.4  8.76   61.1    60.8  5.49  22    71.9  49.9
[90m 9[39m Male  Unstâ€¦ age     247  61.4 10.6    61      61.4 10.4   35    91    56  
[90m10[39m Male  Unstâ€¦ EF      194  59.1  8.67   60      60.2  5.93  24.7  79    54.3
[90m11[39m Femaâ€¦ NSTEâ€¦ age      50  70.9 11.4    74.5    71.9  8.90  42    88    46  
[90m12[39m Femaâ€¦ NSTEâ€¦ EF       45  54.8  9.10   57      55.3  9.79  36.8  75    38.2
[90m# â€¦ with 3 more variables: skew [3m[90m<dbl>[90m[23m, kurtosis [3m[90m<dbl>[90m[23m, se [3m[90m<dbl>[90m[23m[39m
> acs %>% group_by(sex,Dx) %>% select(age) %>% numSummary
Adding missing grouping variables: `sex`, `Dx`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
[90m# A tibble: 6 x 14[39m
[90m# Groups:   sex, Dx [6][39m
  sex   Dx        n  mean    sd median trimmed   mad   min   max range     skew
  [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m   [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m    [3m[90m<dbl>[39m[23m
[90m1[39m Male  STEMI   220  59.4  11.7   59.5    59.4 11.1     30    86    56  0.004[4m3[24m[4m3[24m
[90m2[39m Femaâ€¦ STEMI    84  69.1  10.4   70      70.0 10.4     42    89    47 -[31m0[39m[31m.[39m[31m654[39m  
[90m3[39m Male  NSTEâ€¦   103  61.1  11.6   59      61.3 13.3     28    85    57 -[31m0[39m[31m.[39m[31m110[39m  
[90m4[39m Femaâ€¦ Unstâ€¦   153  67.7  10.7   70      68.3  8.90    39    90    51 -[31m0[39m[31m.[39m[31m540[39m  
[90m5[39m Male  Unstâ€¦   247  61.4  10.6   61      61.4 10.4     35    91    56  0.071[4m0[24m 
[90m6[39m Femaâ€¦ NSTEâ€¦    50  70.9  11.4   74.5    71.9  8.90    42    88    46 -[31m0[39m[31m.[39m[31m721[39m  
[90m# â€¦ with 2 more variables: kurtosis [3m[90m<dbl>[90m[23m, se [3m[90m<dbl>[90m[23m[39m
> #acs %>% group_by(sex,Dx) %>% numSummary(age,EF,lang="kor")
> 
> 
> 
> cleanEx()

detaching â€˜package:tibbleâ€™, â€˜package:rrtableâ€™, â€˜package:dplyrâ€™,
  â€˜package:magrittrâ€™, â€˜package:moonBookâ€™

> nameEx("numSummaryTable")
> ### * numSummaryTable
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: numSummaryTable
> ### Title: Make a table showing numerical summary
> ### Aliases: numSummaryTable
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> require(dplyr)
Loading required package: dplyr

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union

> numSummaryTable(acs)
a flextable object.
col_keys: `rowname`, `vars`, `n`, `mean`, `sd`, `median`, `trimmed`, `mad`, `min`, `max`, `range`, `skew`, `kurtosis`, `se` 
header has 1 row(s) 
body has 9 row(s) 
original dataset sample: 
  rowname   vars      n   mean    sd median trimmed   mad    min    max range
1       1    age 857.00  63.31 11.70  64.00   63.56 13.34  28.00  91.00 63.00
2       2     EF 723.00  55.83  9.62  58.10   56.77  7.86  18.00  79.00 61.00
3       3 height 764.00 163.18  9.08 165.00  163.52  7.41 130.00 185.00 55.00
4       4 weight 766.00  64.84 11.36  65.00   64.55 10.38  30.00 112.00 82.00
5       5    BMI 764.00  24.28  3.35  24.16   24.16  3.01  15.62  41.42 25.80
   skew kurtosis   se
1 -0.18    -0.57 0.40
2 -0.98     1.11 0.36
3 -0.44    -0.01 0.33
4  0.34     0.44 0.41
5  0.67     2.12 0.12
> numSummaryTable(acs$age)
a flextable object.
col_keys: `n`, `mean`, `sd`, `median`, `trimmed`, `mad`, `min`, `max`, `range`, `skew`, `kurtosis`, `se` 
header has 1 row(s) 
body has 1 row(s) 
original dataset sample: 
       n  mean    sd median trimmed   mad   min   max range  skew kurtosis   se
1 857.00 63.31 11.70  64.00   63.56 13.34 28.00 91.00 63.00 -0.18    -0.57 0.40
> acs %>% group_by(sex) %>% select(age) %>% numSummaryTable
Adding missing grouping variables: `sex`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
a flextable object.
col_keys: `sex`, `n`, `mean`, `sd`, `median`, `trimmed`, `mad`, `min`, `max`, `range`, `skew`, `kurtosis`, `se` 
header has 1 row(s) 
body has 2 row(s) 
original dataset sample: 
     sex      n  mean    sd median trimmed   mad   min   max range  skew
1   Male 570.00 60.61 11.23  61.00   60.65 11.86 28.00 91.00 63.00 -0.01
2 Female 287.00 68.68 10.73  70.00   69.43 10.38 39.00 90.00 51.00 -0.59
  kurtosis   se
1    -0.36 0.47
2    -0.26 0.63
> acs %>% group_by(sex) %>% select(age,EF) %>% numSummaryTable
Adding missing grouping variables: `sex`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
a flextable object.
col_keys: `sex`, `vars`, `n`, `mean`, `sd`, `median`, `trimmed`, `mad`, `min`, `max`, `range`, `skew`, `kurtosis`, `se` 
header has 1 row(s) 
body has 4 row(s) 
original dataset sample: 
     sex vars      n  mean    sd median trimmed   mad   min   max range  skew
1   Male  age 570.00 60.61 11.23  61.00   60.65 11.86 28.00 91.00 63.00 -0.01
2   Male   EF 483.00 55.62  9.40  57.30   56.38  8.01 18.00 79.00 61.00 -0.79
3 Female  age 287.00 68.68 10.73  70.00   69.43 10.38 39.00 90.00 51.00 -0.59
4 Female   EF 240.00 56.27 10.06  59.25   57.57  7.19 18.40 75.00 56.60 -1.30
  kurtosis   se
1    -0.36 0.47
2     0.76 0.43
3    -0.26 0.63
4     1.70 0.65
> acs %>% group_by(sex,Dx) %>% select(age,EF) %>% numSummaryTable(vanilla=FALSE)
Adding missing grouping variables: `sex`, `Dx`
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
a flextable object.
col_keys: `sex`, `Dx`, `vars`, `n`, `mean`, `sd`, `median`, `trimmed`, `mad`, `min`, `max`, `range`, `skew`, `kurtosis`, `se` 
header has 1 row(s) 
body has 12 row(s) 
original dataset sample: 
     sex     Dx vars      n  mean    sd median trimmed   mad   min   max range
1   Male  STEMI  age 220.00 59.43 11.72  59.50   59.43 11.12 30.00 86.00 56.00
2   Male  STEMI   EF 195.00 52.37  8.90  54.00   52.88  8.45 18.00 73.60 55.60
3 Female  STEMI  age  84.00 69.11 10.36  70.00   70.04 10.38 42.00 89.00 47.00
4 Female  STEMI   EF  77.00 52.32 10.94  55.70   53.72  9.04 18.40 67.10 48.70
5   Male NSTEMI  age 103.00 61.15 11.57  59.00   61.28 13.34 28.00 85.00 57.00
   skew kurtosis   se
1  0.00    -0.55 0.79
2 -0.62     0.53 0.64
3 -0.65    -0.09 1.13
4 -1.17     1.01 1.25
5 -0.11    -0.53 1.14
> acs %>% group_by(sex,Dx) %>% numSummaryTable(age,EF,add.rownames=FALSE)
Warning: `cols` is now required when using unnest().
Please use `cols = c(summary)`
a flextable object.
col_keys: `sex`, `Dx`, `vars`, `n`, `mean`, `sd`, `median`, `trimmed`, `mad`, `min`, `max`, `range`, `skew`, `kurtosis`, `se` 
header has 1 row(s) 
body has 12 row(s) 
original dataset sample: 
     sex     Dx vars      n  mean    sd median trimmed   mad   min   max range
1   Male  STEMI  age 220.00 59.43 11.72  59.50   59.43 11.12 30.00 86.00 56.00
2   Male  STEMI   EF 195.00 52.37  8.90  54.00   52.88  8.45 18.00 73.60 55.60
3 Female  STEMI  age  84.00 69.11 10.36  70.00   70.04 10.38 42.00 89.00 47.00
4 Female  STEMI   EF  77.00 52.32 10.94  55.70   53.72  9.04 18.40 67.10 48.70
5   Male NSTEMI  age 103.00 61.15 11.57  59.00   61.28 13.34 28.00 85.00 57.00
   skew kurtosis   se
1  0.00    -0.55 0.79
2 -0.62     0.53 0.64
3 -0.65    -0.09 1.13
4 -1.17     1.01 1.25
5 -0.11    -0.53 1.14
> 
> 
> 
> cleanEx()

detaching â€˜package:dplyrâ€™, â€˜package:moonBookâ€™

> nameEx("plot.htest")
> ### * plot.htest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot.htest
> ### Title: Plotting distribution of statistic for object "htest"
> ### Aliases: plot.htest
> 
> ### ** Examples
> 
> 
> require(moonBook)
Loading required package: moonBook
> require(webr)
> ## chi-square test
> x=chisq.test(table(mtcars$am,mtcars$cyl))
Warning in chisq.test(table(mtcars$am, mtcars$cyl)) :
  Chi-squared approximation may be incorrect
> plot(x)
> 
> #Welch Two Sample t-test
> x=t.test(mpg~am,data=mtcars)
> plot(x)
> 
> 
> 
> cleanEx()

detaching â€˜package:moonBookâ€™

> nameEx("runs.test")
> ### * runs.test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: runs.test
> ### Title: Runs test for randomness
> ### Aliases: runs.test
> 
> ### ** Examples
> 
> y=c(1,2,2,1,1,2,1,2)
> runs.test(y)

	Runs Test - Two sided

data:  y
Standardized Runs Statistic = 0.76376, p-value = 0.445

> y=c("A","B","B","A","A","B","A","B")
> runs.test(y,alternative="p")

	Runs Test - Positive Correlated

data:  c(1, 2, 2, 1, 1, 2, 1, 2)
Standardized Runs Statistic = 0.76376, p-value = 0.7775

> 
> 
> 
> cleanEx()
> nameEx("x2Table")
> ### * x2Table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: x2Table
> ### Title: Make a chisquare result table
> ### Aliases: x2Table
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> x2Table(acs,sex,DM)
a flextable object.
col_keys: `rowname`, `No`, `Yes`, `Total` 
header has 1 row(s) 
body has 3 row(s) 
original dataset sample: 
       rowname           No          Yes        Total
Female  Female 173\n(60.3%) 114\n(39.7%) 287\n(100 %)
Male      Male 380\n(66.7%) 190\n(33.3%) 570\n(100 %)
Total    Total 553\n(64.5%) 304\n(35.5%) 857\n(100 %)
> 
> 
> 
> cleanEx()

detaching â€˜package:moonBookâ€™

> nameEx("x2summary")
> ### * x2summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: x2summary
> ### Title: Summarize chisquare result
> ### Aliases: x2summary
> 
> ### ** Examples
> 
> require(moonBook)
Loading required package: moonBook
> x2summary(acs,sex,DM)
                 No          Yes        Total
Female 173\n(60.3%) 114\n(39.7%) 287\n(100 %)
Male   380\n(66.7%) 190\n(33.3%) 570\n(100 %)
Total  553\n(64.5%) 304\n(35.5%) 857\n(100 %)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching â€˜package:moonBookâ€™

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  2.566 0.123 2.964 0.001 0.002 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
